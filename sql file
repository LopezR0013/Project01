--DROP TRIGGER account_trig;
DROP TRIGGER account_trig1;
DROP TRIGGER account_trig2;
DROP TRIGGER account_trig3;
DROP TRIGGER account_trig4;
DROP TRIGGER account_trig5;
DROP TRIGGER account_trig6;
DROP TRIGGER account_trig7;
DROP TRIGGER account_trig8;

--DROP SEQUENCE account_seq;
DROP SEQUENCE account_seq1;
DROP SEQUENCE account_seq2;
DROP SEQUENCE account_seq3;
DROP SEQUENCE account_seq4;
DROP SEQUENCE account_seq5;
DROP SEQUENCE account_seq6;
DROP SEQUENCE account_seq7;
DROP SEQUENCE account_seq8;




 DROP TABLE ERS_USER_ROLES;
 DROP TABLE ERS_REIMBURSEMENT_TYPE;
 DROP TABLE ERS_REIMBURSEMENT_STATUS;
 DROP TABLE ERS_USERS;
 DROP TABLE ERS_REIMBURSEMENT;
 
 
 
--User role can either be EMPLOYEE or MANAGER
CREATE TABLE ERS_USER_ROLES (
  ERS_USER_ROLE_ID NUMBER,
  USER_ROLES VARCHAR2(10),
  PRIMARY KEY (ERS_USER_ROLE_ID)
);

--LODGING, TRAVEL, FOOD, or OTHER.

CREATE TABLE ERS_REIMBURSEMENT_TYPE (   
  REIMB_TYPE_ID NUMBER,
  REIMB_TYPE VARCHAR2(10),
  PRIMARY KEY (REIMB_TYPE_ID)
);

--PENDING , APPROVED, DENIED

CREATE TABLE ERS_REIMBURSEMENT_STATUS (
  REIMB_STATUS_ID NUMBER,--to be incremented
  REIMB_STATUS VARCHAR2(10),
  PRIMARY KEY (REIMB_STATUS_ID)
);

CREATE TABLE ERS_USERS (
  ERS_USER_ID NUMBER,
  ERS_USERNAME VARCHAR2(50),
  ERS_PASSWORD VARCHAR2(50),
  USER_FIRST_NAME VARCHAR2(100),
  USER_LAST_NAME VARCHAR2(100),
  USER_EMAIL VARCHAR2(150),
  USER_ROLE_ID NUMBER,
  PRIMARY KEY (ERS_USER_ID)
);


CREATE TABLE ERS_REIMBURSEMENT (
  REIMB_ID NUMBER,
  REIMB_AMOUNT NUMBER,
  REIMB_SUBMITTED TIMESTAMP,
  REIMB_RESOLVED TIMESTAMP,
  REIMB_DESCRIPTION VARCHAR2(250),
  REIMB_RECEIPT BLOB,
  REIMB_AUTHOR NUMBER,
  REIMB_RESOLVER NUMBER,
  REIMB_STATUS_ID NUMBER,
  REIMB_TYPE_ID NUMBER,
  PRIMARY KEY (REIMB_ID)
);




CREATE SEQUENCE account_seq1 
    START WITH 8
    INCREMENT BY 1;
/

CREATE SEQUENCE account_seq2 
    START WITH 8
    INCREMENT BY 1;
/


CREATE SEQUENCE account_seq3 
    START WITH 8
    INCREMENT BY 1;
/


CREATE SEQUENCE account_seq4 
    START WITH 8
    INCREMENT BY 1;
/


CREATE SEQUENCE account_seq5 
    START WITH 8
    INCREMENT BY 1;
/

CREATE SEQUENCE account_seq6 
    START WITH 8
    INCREMENT BY 1;
/

CREATE SEQUENCE account_seq7 
    START WITH 8
    INCREMENT BY 1;
/

CREATE SEQUENCE account_seq8 
    START WITH 8
    INCREMENT BY 1;
/


CREATE TRIGGER account_trig1 --naming the trigger
BEFORE INSERT ON ERS_REIMBURSEMENT  -- when and what action happens 'AFTER'
FOR EACH ROW
BEGIN --signifies a block for a transaction
    IF :new.REIMB_ID = 0 THEN
    SELECT account_seq1.nextval INTO :new.REIMB_ID FROM dual;
    END IF;
END;
/

CREATE TRIGGER account_trig2 --naming the trigger
BEFORE INSERT ON ERS_USERS  -- when and what action happens 'AFTER'
FOR EACH ROW
BEGIN --signifies a block for a transaction
    IF :new.ERS_USER_ID = 0 THEN
    SELECT account_seq2.nextval INTO :new.ERS_USER_ID FROM dual;
    END IF;
END;
/

CREATE TRIGGER account_trig3 --naming the trigger
BEFORE INSERT ON ERS_USER_ROLES  -- when and what action happens 'AFTER'
FOR EACH ROW
BEGIN --signifies a block for a transaction
    IF :new.ERS_USER_ROLE_ID = 0 THEN
    SELECT account_seq3.nextval INTO :new.ERS_USER_ROLE_ID FROM dual;
    END IF;
END;
/

CREATE TRIGGER account_trig4                --naming the trigger
BEFORE INSERT ON ERS_REIMBURSEMENT_TYPE     -- when and what action happens 'AFTER'
FOR EACH ROW
BEGIN --signifies a block for a transaction
    IF :new.REIMB_TYPE_ID = 0 THEN
    SELECT account_seq4.nextval INTO :new.REIMB_TYPE_ID FROM dual;
    END IF;
END;
/


CREATE TRIGGER account_trig5        --naming the trigger
BEFORE INSERT ON ERS_REIMBURSEMENT_STATUS     -- when and what action happens 'AFTER'
FOR EACH ROW
BEGIN --signifies a block for a transaction
    IF :new.REIMB_STATUS_ID = 0 THEN
    SELECT account_seq5.nextval INTO :new.REIMB_STATUS_ID FROM dual;
    END IF;
END;
/

CREATE TRIGGER account_trig6        --naming the trigger
BEFORE INSERT ON ERS_USERS     -- when and what action happens 'AFTER'
FOR EACH ROW
BEGIN --signifies a block for a transaction
    IF :new.USER_ROLE_ID = 0 THEN
    SELECT account_seq6.nextval INTO :new.USER_ROLE_ID FROM dual;
    END IF;
END;
/

CREATE TRIGGER account_trig7        --naming the trigger
BEFORE INSERT ON ERS_REIMBURSEMENT          -- when and what action happens 'AFTER'
FOR EACH ROW
BEGIN --signifies a block for a transaction
    IF :new.REIMB_TYPE_ID = 0 THEN
    SELECT account_seq7.nextval INTO :new.REIMB_TYPE_ID FROM dual;
    END IF;
END;
/

CREATE TRIGGER account_trig8        --naming the trigger
BEFORE INSERT ON ERS_REIMBURSEMENT          -- when and what action happens 'AFTER'
FOR EACH ROW
BEGIN --signifies a block for a transaction
    IF :new.REIMB_STATUS_ID = 0 THEN
    SELECT account_seq8.nextval INTO :new.REIMB_STATUS_ID FROM dual;
    END IF;
END;
/


INSERT INTO ERS_USERS ( ERS_USER_ID , ERS_USERNAME , ERS_PASSWORD , USER_FIRST_NAME , USER_LAST_NAME , USER_EMAIL , USER_ROLE_ID) 
VALUES ( 0 , 'LopezR013' , '123' , 'Ruben' , 'Lopez' , 'LopezR013@hotmail.com' , 1 );

INSERT INTO ERS_USERS ( ERS_USER_ID , ERS_USERNAME , ERS_PASSWORD , USER_FIRST_NAME , USER_LAST_NAME , USER_EMAIL , USER_ROLE_ID) 
VALUES ( 0 , 'SAMOUT123' , '123' , 'Sam' , 'Jones' , 'SAMJONES@hotmail.com' , 2 );

INSERT INTO ERS_USERS ( ERS_USER_ID , ERS_USERNAME , ERS_PASSWORD , USER_FIRST_NAME , USER_LAST_NAME , USER_EMAIL , USER_ROLE_ID) 
VALUES ( 0 , 'DYLOUT123' , '123' , 'Dlyan' , 'Boyce' , 'Dlyan@hotmail.com' , 2 );

SELECT * FROM ERS_USERS;

INSERT INTO ERS_USER_ROLES (ers_user_role_id, USER_ROLES )
VALUES ( 1 , 'MANAGER' );

INSERT INTO ERS_USER_ROLES (ers_user_role_id, USER_ROLES )
VALUES ( 2 , 'EMPLOYEE' );

SELECT * FROM ERS_USER_ROLES;

INSERT INTO ers_reimbursement_status (reimb_status_id ,REIMB_STATUS )
VALUES ( 1 ,'PENDING');

INSERT INTO ers_reimbursement_status (reimb_status_id ,REIMB_STATUS )
VALUES ( 2 , 'DENIED');

INSERT INTO ers_reimbursement_status (reimb_status_id ,REIMB_STATUS )
VALUES ( 3 , 'APPROVED');

SELECT * FROM ers_reimbursement_status;


INSERT INTO ers_reimbursement_type (reimb_type_id, REIMB_TYPE)
VALUES ( 1 , 'LODGING' );

INSERT INTO ers_reimbursement_type (reimb_type_id, REIMB_TYPE)
VALUES ( 2 , 'TRAVEL' );

INSERT INTO ers_reimbursement_type (reimb_type_id, REIMB_TYPE)
VALUES ( 3 , 'FOOD' );

INSERT INTO ers_reimbursement_type (reimb_type_id, REIMB_TYPE)
VALUES ( 4 , 'OTHER' );

SELECT * FROM ers_reimbursement_type;


INSERT INTO ERS_REIMBURSEMENT ( REIMB_ID, REIMB_AMOUNT,REIMB_SUBMITTED , REIMB_RESOLVED , REIMB_DESCRIPTION , REIMB_RECEIPT , REIMB_AUTHOR , REIMB_RESOLVER, REIMB_STATUS_ID , REIMB_TYPE_ID )
VALUES ( 0 , 20.25 , CURRENT_TIMESTAMP , null , null , null , 9 , 8 , 1 , 1 );

INSERT INTO ERS_REIMBURSEMENT ( REIMB_ID, REIMB_AMOUNT,REIMB_SUBMITTED , REIMB_RESOLVED , REIMB_DESCRIPTION , REIMB_RECEIPT , REIMB_AUTHOR , REIMB_RESOLVER, REIMB_STATUS_ID , REIMB_TYPE_ID )
VALUES ( 0 , 45.25 , CURRENT_TIMESTAMP , null , null , null , 9 , 8 , 1 , 1 );

INSERT INTO ERS_REIMBURSEMENT ( REIMB_ID, REIMB_AMOUNT,REIMB_SUBMITTED , REIMB_RESOLVED , REIMB_DESCRIPTION , REIMB_RECEIPT , REIMB_AUTHOR , REIMB_RESOLVER, REIMB_STATUS_ID , REIMB_TYPE_ID )
VALUES ( 0 , 55.25 , CURRENT_TIMESTAMP , null , null , null , 9 , 8 , 1 , 4 );

SELECT * FROM ers_reimbursement;

SELECT REIMB_ID , REIMB_AMOUNT FROM ers_reimbursement;
--SELECT * FROM ERS_REIMBURSEMENT WHERE REIMB_ID=8;

--DELETE FROM ERS_USERS WHERE ERS_USER_ID = 28;

--UPDATE ERS_USERS SET ERS_USERNAME = 'LopezR013' , ERS_PASSWORD= '123' , USER_FIRST_NAME='Ruben' , USER_LAST_NAME='Lopez' , USER_EMAIL = 'LopezR013@hotmail.com', USER_ROLE_ID=1  WHERE ERS_USER_ID =8;
--UPDATE ERS_REIMBURSEMENT SET REIMB_AMOUNT=20.25 , REIMB_SUBBITTED = CURRENT_TIMESTAMP , REIMB_RESOLVED = NULL , REIMB_DESCRIPTION=NULL , REIMB_RECEIPT = NULL , REIMB_AUTHOR = 9 , REIMB_AUTHOR = 8, REIMB_STATUS_ID = 1, REIMB_TYPE_ID=1 where REIMB_ID=8; 
--UPDATE ERS_REIMBURSEMENT SET REIMB_AMOUNT = 20.25 ,REIMB_SUBMITTED = CURRENT_TIMESTAMP, REIMB_RESOLVED = NULL , REIMB_DESCRIPTION = NULL , REIMB_RECEIPT = NULL, REIMB_AUTHOR = 9 , REIMB_RESOLVER =8, REIMB_STATUS_ID = 1, REIMB_TYPE_ID =1 where REIMB_ID=8;
